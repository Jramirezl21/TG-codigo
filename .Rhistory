MFAincompCap$eig[1,1]/6.572726
MFAincompDe$eig[1,1]/6.572726
MFAincompFa$eig[1,1]/6.572726
I_1 <- (MFAincompCap$ind$coord[,1]*MFAincompCap$eig[1,1]/6.572726)+
(MFAincompDe$ind$coord[,1]*MFAincompDe$eig[1,1]/6.572726)+
(MFAincompFa$ind$coord[,1]*MFAincompFa$eig[1,1]/6.572726)
Puntaje.I_1 <- 100-((I_1 - min(I_1))*100/(max(I_1)-min(I_1)))
Puntaje.df
MFAincompCap$ind$coord[,1]
Puntaje.df
View(Datos.num.incomp)
plot(Puntaje.df,Datos.num.incomp$edad)
dfedad <- data.frame(Puntaje.df,Datos.num.incomp)
######
#AFM con los para los datos incompletos quitando educacion y sexo
Datos.num.incomp <- Datos.num[rowSums(is.na(Datos.num)) > 0, ]
library(whomds)
library(EFAtools)
library(psych)
library(haven)
library(polycor)
library(ggcorrplot)
library(GPArotation)
library(psych)
library(lavaan)
library(polycor)
library(ggcorrplot)
library(FactoMineR)
library(factoextra)
library(ade4)
library(FactoMineR)
library(missMDA)
library(dplyr)
######
#AFM con los para los datos incompletos quitando educacion y sexo
Datos.num.incomp <- Datos.num[rowSums(is.na(Datos.num)) > 0, ]
capIncom_NoNA <- dplyr::select(Datos.num.incomp,c2,c3,c5,c15,c19,c20,c21,c23,c6,
c7,c8,c9,c10,c11,c12,c13,c14,c16,c17,c18,c22,c4)
MFAincompCap <- MFA(capIncom_NoNA,group=c(8,13,1))
deIncom_NoNA <- dplyr::select(Datos.num.incomp,d15,d16,d17,d18,d19,d21,d22,d23,d24,d25,d34,d35,
d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13,
d14, d20, d26, d27, d28, d29, d30, d31, d32, d33, d36, d37,
d38, d39, d40, d41, d42, d43, d44, d45)
deIncom_NoNA <- dplyr::select(Datos.num.incomp,d15,d16,d17,d18,d19,d21,d22,d23,d24,d25,d34,d35,
d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13,
d14, d20, d26, d27, d28, d29, d30, d31, d32, d33, d36, d37,
d38, d39, d40, d41, d42, d43, d44, d45)
faIncom_NoNA <- dplyr::select(Datos.num.incomp,fa1,fa3,fa6,fa7,fa8,fa9,fa10,fa2,fa4,fa5)
semPlot::semPaths(fitIncom, "std",layout = "circle")
semPlot::semPaths(fitComom, "std",layout = "circle")
semPlot::semPaths(fitCom, "std",layout = "circle")
fitCom<-cfa(model= modeloCom,
data = Datos.num.comple[,c(5:87)], orthogonal=T,ordered = F)
library(whomds)
library(EFAtools)
library(psych)
library(haven)
library(polycor)
library(ggcorrplot)
library(GPArotation)
library(psych)
library(lavaan)
library(polycor)
library(ggcorrplot)
library(FactoMineR)
library(factoextra)
library(ade4)
library(FactoMineR)
library(missMDA)
library(dplyr)
modeloCom<-"capacidad =~ c2 + c3 + c4 + c5 + c6 + c7 + c8 + c9 + c10 + c11 + c12 + c13 + c14 + c15 + c16 + c17 + c18 + c19 + c20 + c21 + c22 + c23 + c24 + c25
desempeno =~ d1 + d2 + d3 + d4 + d5 + d6 + d7 + d8 + d9 + d10 + d11 + d12 +
d13 + d14 + d15 + d16 + d17 + d18 + d19 + d20 + d21 + d22 + d23 + d24 +
d25 + d26 + d27 + d28 + d29 + d30 + d31 + d32 + d33 + d34 + d35 + d36 + d37
+ d38 + d39 + d40 + d41 + d42 + d43 + d44 + d45 + d46 + d47
factores_ambientales =~ fa1 + fa2 + fa3 + fa4 + fa5 + fa6 + fa7 + fa8 + fa9 + fa10 + fa11 + fa12
"
fitCom<-cfa(model= modeloCom,
data = Datos.num.comple[,c(5:87)], orthogonal=T,ordered = F)
semPlot::semPaths(fitCom, "std",layout = "circle")
dfedad <- data.frame(Puntaje.I_1,Datos.num.incomp$edad)
######
#AFM con los para los datos incompletos quitando educacion y sexo
Datos.num.incomp <- Datos.num[rowSums(is.na(Datos.num)) > 0, ]
capIncom_NoNA <- dplyr::select(Datos.num.incomp,c2,c3,c5,c15,c19,c20,c21,c23,c6,
c7,c8,c9,c10,c11,c12,c13,c14,c16,c17,c18,c22,c4)
MFAincompCap <- MFA(capIncom_NoNA,group=c(8,13,1))
deIncom_NoNA <- dplyr::select(Datos.num.incomp,d15,d16,d17,d18,d19,d21,d22,d23,d24,d25,d34,d35,
d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13,
d14, d20, d26, d27, d28, d29, d30, d31, d32, d33, d36, d37,
d38, d39, d40, d41, d42, d43, d44, d45)
MFAincompDe <- MFA(deIncom_NoNA,group=c(12,33))
fviz_mfa_var(MFAincompDe)
faIncom_NoNA <- dplyr::select(Datos.num.incomp,fa1,fa3,fa6,fa7,fa8,fa9,fa10,fa2,fa4,fa5)
MFAincompFa <- MFA(faIncom_NoNA,group =c(7,1,1,1))
T1.cap <- MFAincompCap$ind$coord[,1]
T1.de <- MFAincompDe$ind$coord[,1]
T1.fa <- MFAincompFa$ind$coord[,1]
#MFAincompCap$eig[1,1]+MFAincompDe$eig[1,1]+MFAincompFa$eig[1,1]=6.572726
#Ponderanciones indicador
MFAincompCap$eig[1,1]/6.57207
MFAincompDe$eig[1,1]/6.57207
MFAincompFa$eig[1,1]/6.57207
MFAincompCap$eig[1,1]+MFAincompDe$eig[1,1]+MFAincompFa$eig[1,1]
I_1 <- (MFAincompCap$ind$coord[,1]*MFAincompCap$eig[1,1]/6.572726)+
(MFAincompDe$ind$coord[,1]*MFAincompDe$eig[1,1]/6.572726)+
(MFAincompFa$ind$coord[,1]*MFAincompFa$eig[1,1]/6.572726)
Puntaje.I_1 <- 100-((I_1 - min(I_1))*100/(max(I_1)-min(I_1)))
Puntaje.df <- data.frame(Puntaje.I_1)
dfedad <- data.frame(Puntaje.I_1,Datos.num.incomp$edad)
plot(Datos.num.incomp$edad,Puntaje.I_1)
dfedad <- data.frame(Puntaje.I_1,Datos.num.incomp$edad,Datos.num.incomp$sexo)
dfedad
ggplot(dfedad, aes(x = Datos.num.incomp.edad, y = Puntaje.I_1, color = Datos.num.incomp.sexo)) +
geom_point() +
labs(x = "Edad", y = "Puntaje", color = "Sexo") +
theme_minimal()
View(Datos.cat.cap_reagrupado)
View(Datos.cat)
plot(Datos.num.incomp$sexo,Puntaje.I_1)
boxplot(Datos.num.incomp$sexo,Puntaje.I_1)
library(whomds)
library(EFAtools)
library(psych)
library(haven)
library(polycor)
library(ggcorrplot)
library(GPArotation)
library(psych)
library(lavaan)
library(polycor)
library(ggcorrplot)
library(FactoMineR)
library(factoextra)
library(ade4)
library(FactoMineR)
library(missMDA)
library(dplyr)
semPlot::semPaths(fitCom, "std",layout = "circle")
semPlot::semPaths(fitIncom, "std",layout = "circle")
library(whomds)
library(EFAtools)
library(psych)
library(haven)
library(polycor)
library(ggcorrplot)
library(GPArotation)
library(psych)
library(lavaan)
library(polycor)
library(ggcorrplot)
library(FactoMineR)
library(factoextra)
library(ade4)
library(FactoMineR)
library(missMDA)
library(dplyr)
semPlot::semPaths(fitCom, "std",layout = "circle")
library(whomds)
library(EFAtools)
library(psych)
library(haven)
library(polycor)
library(ggcorrplot)
library(GPArotation)
library(psych)
library(lavaan)
library(polycor)
library(ggcorrplot)
library(FactoMineR)
library(factoextra)
library(ade4)
library(FactoMineR)
library(missMDA)
library(dplyr)
rowSums(data_fil)
rowSums(is.na(data_fil))
Sum(is.na(data_fil))
colSums(is.na(data_fil))
#Preguntar al profe por la c7 0.59 cf
capIncomSelect_NoNA <- dplyr::select(Datos.num.incomp,c6,
c8,c9,c10,c11,c12,c16,c17,c18,c22,c4,c5)
MFAincompSelectCap <- MFA(capIncomSelect_NoNA,group=c(10,1,1))
fviz_mfa_var(MFAincompSelectCap )
deIncomSelect_NoNA <- dplyr::select(Datos.num.incomp,d21,
d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13,
d14, d31, d36, d37, d42, d43, d45)
deIncomSelect_NoNA <- dplyr::select(Datos.num.incomp,d21,
d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13,
d14, d31, d36, d37, d42, d43, d45)
MFAincompSelectDe <- MFA(deIncomSelect_NoNA,group=c(1,20))
fviz_mfa_var(MFAincompSelectDe)
semPlot::semPaths(fitIncom, "std",layout = "circle")
faIncomSelect_NoNA <- dplyr::select(Datos.num.incomp,fa3,fa6,fa7,fa2,fa4)
MFAincompSelectFa <- MFA(faIncomSelect_NoNA,group =c(3,1,1))
fviz_mfa_ind(MFAincompSelectFa)
fviz_mfa_ind(MFAincompSelectDe)
fviz_mfa_ind(MFAincompSelectCap)
fviz_mfa_ind(MFAincompSelectCap)
fviz_mfa_ind(MFAincompSelectDe)
fviz_mfa_ind(MFAincompSelectFa)
fviz_mfa_ind(MFAincompCap )
fviz_mfa_ind(MFAincompDe)
fviz_mfa_ind(MFAincompFa)
#8, 15,1
capSelectCom<- dplyr::select(Datos.num.comple,c6,
c10,c11,c12,c16,c17,c22,c24,c25,c4)
MFAcompSelectCap <- MFA(capSelectCom,group=c(9,1))
#12,35
deSelectCom <- dplyr::select(Datos.num.comple,d18,d19,d21,d24,d25,d35,
d1, d2, d3, d4, d5, d6, d7, d20, d26, d27,
d29, d30, d36)
MFAcompSelectDe <- MFA(deSelectCom,group=c(6,13))
fviz_mfa_var(MFAcompSelectDe )
fviz_mfa_ind(MFAcompSelectDe )
#7,3,1,1
faSelectCom<- dplyr::select(Datos.num.comple,fa3,fa7,fa9,fa10,fa11,fa2,fa4)
MFAcompSelecFa <- MFA(faSelectCom,group=c(4,2,1))
fviz_mfa_ind(MFAcompSelecFa)
MFAincompSelectCap$ind$coord[,1]
T1.deIncomp <- MFAincompSelectDe$ind$coord[,1]
###### Indicicadores ######
T1.capIncomp <- MFAincompSelectCap$ind$coord[,1]
T1.faIncomp <- MFAincompSelectFa$ind$coord[,1]
T1.faIncomp
MFAincompSelectCap$eig[1,1]+MFAincompSelectDe$eig[1,1]+MFAincompSelectFa$eig[1,1]
MFAincompSelectCap$eig[1,1]+MFAincompSelectDe$eig[1,1]
+MFAincompSelectFa$eig[1,1]
MFAincompSelectCap$eig[1,1]+MFAincompSelectDe$eig[1,1]+MFAincompSelectFa$eig[1,1]
MFAincompSelectCap$eig[1,1]/5.758771
MFAincompSelectDe$eig[1,1]/5.758771
MFAincompSelectFa$eig[1,1]/5.758771
I_1Select <- (MFAincompSelectCap$ind$coord[,1]*MFAincompSelectCap$eig[1,1]/5.758771)+
(MFAincompSelectDe$ind$coord[,1]*MFAincompSelectDe$eig[1,1]/5.758771)+
(MFAincompSelectFa$ind$coord[,1]*MFAincompSelectFa$eig[1,1]/5.758771)
I_1Select
Puntaje.I_1 <- 100-((I_1Select - min(I_1Select))*100/(max(I_1Select)-min(I_1Select)))
Puntaje.I_1
Puntaje.df <- data.frame(Puntaje.I_1)
Puntaje.df
View(Datos.num.incomp)
dfedad <- data.frame(Puntaje.I_1,Datos.num.incomp$edad,Datos.num.incomp$sexo)
ggplot(dfedad, aes(x = Datos.num.incomp.edad, y = Puntaje.I_1, color = Datos.num.incomp.sexo)) +
geom_point() +
labs(x = "Edad", y = "Puntaje", color = "Sexo") +
theme_minimal()
#Completos
T2.capcomp <- MFAcompSelectCap$ind$coord[,1]
T2.decomp <- MFAcompSelectDe$ind$coord[,1]
T2.facomp <- MFAcompSelectFa$ind$coord[,1]
MFAcompSelectCap$eig[1,1]+MFAcompSelectDe$eig[1,1]+MFAcompSelectFa$eig[1,1]
T2.facomp <- MFAcompSelecFa$ind$coord[,1]
MFAcompSelectCap$eig[1,1]+MFAcompSelectDe$eig[1,1]+MFAcompSelecFa$eig[1,1]
MFAcompSelectCap$eig[1,1]/5.613846
MFAcompSelectDe$eig[1,1]/5.613846
MFAcompSelecFa$eig[1,1]/5.613846
I_2Select <- (T2.capcomp*MFAcompSelectCap$eig[1,1]/5.613846)+
(T2.decomp*MFAcompSelectDe$eig[1,1]/5.613846)+
(T2.facomp*MFAcompSelecFa$eig[1,1]/5.613846)
Puntaje.I_1 <- 100-((I_2Select - min(I_2Select))*100/(max(I_2Select)-min(I_2Select)))
Puntaje.I_1 <- 100-((I_1Select - min(I_1Select))*100/(max(I_1Select)-min(I_1Select)))
Puntaje.I_2 <- 100-((I_2Select - min(I_2Select))*100/(max(I_2Select)-min(I_2Select)))
Puntaje.I_2
Puntaje2.df <- data.frame(Puntaje.I_2)
Puntaje2.df
View(Datos.num.comple)
View(Datos.num)
View(Datos.num)
#Factor columnas de region sexo
Datos.num$region <- as.factor(Datos.num$region)
Datos.num$sexo <- as.factor(Datos.num$sexo)
write.csv(Datos.num,file="DatosNum.csv",row.names = FALSE)
library(whomds)
library(EFAtools)
library(psych)
library(haven)
library(polycor)
library(ggcorrplot)
library(GPArotation)
library(psych)
library(lavaan)
library(polycor)
library(ggcorrplot)
library(FactoMineR)
library(factoextra)
library(ade4)
library(FactoMineR)
library(missMDA)
library(dplyr)
semPlot::semPaths(fitIncom,nCharNodes = 0,intercepts = F,edge.label.cex = 1,
edge.color = "black",sizeMan = standardizedSolution(fitIncom)$loading * 10,label.prop=0.45,sizeLat = 2,"std",layout = "circle",exoVar = T)
semPlot::semPaths(fitIncom, "std",layout = "circle")
(Datos.num.incomp$region)
Datos.num.incomp$region <- as.factor(Datos.num.incomp$region)
Datos.num.incomp$sexo <- as.factor(Datos.num.incomp$region)
Datos.num.comple$region <- as.factor(Datos.num.comple$region)
Datos.num.comple$sexo <- as.factor(Datos.num.comple$sexo )
install.packages("foreign")
library(whomds)
library(EFAtools)
library(psych)
library(haven)
library(polycor)
library(ggcorrplot)
library(GPArotation)
library(psych)
library(lavaan)
library(polycor)
library(ggcorrplot)
library(FactoMineR)
library(factoextra)
library(ade4)
library(FactoMineR)
library(missMDA)
library(dplyr)
# BASE DE DATOS ----
ruta_del_archivo <- "D:/jorge/Semestre 9/TG 1/TG codigo/Base de Datos II Estudio Nacional de la Discapacidad.sav"
data <- read_sav(ruta_del_archivo)
dffiltrado <- subset(data, edad >= 18)
datosfil <- dffiltrado[,c(3,8,14,15,116:139,68:114,309:320)]
rm(data)
rm(dffiltrado)
datosfilt <- data.frame(lapply(datosfil, function(x) if(is.labelled(x)) as_factor(x) else x))
datosfil1 <- data.frame(lapply(data_fil2, function(x) if(is.labelled(x)) as.numeric(x) else x))
View(datosfil)
View(datosfilt)
View(datosfil)
# Lista de valores a excluir
valores_excluir <- c("No sabe", "Sin dato", "No responde")
valores_excluir2 <- c(88,96,99)
# Filtrar las filas que no contienen los valores deseados en las variables no generales
data_fil <- datosfilt %>%
filter(
across(-c(edad, sexo, region), ~ !(. %in% valores_excluir))
)
data_fil2 <- datosfil %>%
filter(
across(-c(edad, sexo, region), ~ !(. %in% valores_excluir2))
)
View(data_fil)
View(data_fil)
cantidad_na <- rowSums(is.na(data_fil2))
Datos.num<- data_fil2 %>%
filter(cantidad_na < 83)
Datos.cat <- data_fil %>%
filter(cantidad_na < 83)
Datos.cat <- droplevels(Datos.cat)
View(Datos.num)
Datos.num<-  data.frame(lapply(Datos.num, function(x) if(is.labelled(x)) as.numeric(x) else x))
cantidad_na2 <- rowSums(is.na(Datos.num))
cantidad_na2
View(Datos.num)
Datos.num$region <- as.factor(Datos.num$region)
Datos.num$sexo <- as.factor(Datos.num$sexo)
rm(c("data_fil"))
rm(c(data_fil))
rm(data_fil);rm(data_fil2);rm(datosfil);rm(datosfilt)
#REAGRUPACION CAPACIDAD----
#8, 14,1
Datos.num.cap_reagrupado <- dplyr::select(Datos.num,c2,c3,c5,c15,c19,c20,c21,c23,c6,
c7,c8,c9,c10,c11,c12,c13,c14,c16,c17,c18,c22,c24,c4)
Datos.cat.cap_reagrupado <- dplyr::select(Datos.cat,c2,c3,c5,c15,c19,c20,c21,c23,c6,
c7,c8,c9,c10,c11,c12,c13,c14,c16,c17,c18,c22,c24
,c4)
#8,13,1
cap_reagrupado_NoNA_num <- dplyr::select(Datos.num,c2,c3,c5,c15,c19,c20,c21,c23,c6,
c7,c8,c9,c10,c11,c12,c13,c14,c16,c17,c18,c22,c4)
cap_reagrupado_NoNA_cat <- dplyr::select(Datos.cat,c2,c3,c5,c15,c19,c20,c21,c23,c6,
c7,c8,c9,c10,c11,c12,c13,c14,c16,c17,c18,c22,c4)
#12,34
Datos.num.de_reagrupado <- dplyr::select(Datos.num,d15,d16,d17,d18,d19,d21,d22,d23,d24,d25,d34,d35,
d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13,
d14, d20, d26, d27, d28, d29, d30, d31, d32, d33, d36, d37,
d38, d39, d40, d41, d42, d43, d44, d45, d46)
Datos.cat.de_reagrupado <- dplyr::select(Datos.cat,d15,d16,d17,d18,d19,d21,d22,d23,d24,d25,d34,d35,
d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13,
d14, d20, d26, d27, d28, d29, d30, d31, d32, d33, d36, d37,
d38, d39, d40, d41, d42, d43, d44, d45, d46)
#12,33
de_reagrupado_NoNA_num <- dplyr::select(Datos.num,d15,d16,d17,d18,d19,d21,d22,d23,d24,d25,d34,d35,
d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13,
d14, d20, d26, d27, d28, d29, d30, d31, d32, d33, d36, d37,
d38, d39, d40, d41, d42, d43, d44, d45)
de.cat_reagrupado_NoNA_num <- dplyr::select(Datos.cat,d15,d16,d17,d18,d19,d21,d22,d23,d24,d25,d34,d35,
d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13,
d14, d20, d26, d27, d28, d29, d30, d31, d32, d33, d36, d37,
d38, d39, d40, d41, d42, d43, d44, d45)
#REAGRUPACION FACTORES AMBIENTALES----
#11,12
#7,1,1,1
Datos.num.fa_reagrupado<- dplyr::select(Datos.num,fa1,fa3,fa6,fa7,fa8,fa9,fa10,fa2,fa11,fa4,fa5)
Datos.cat.fa_reagrupado <- dplyr::select(Datos.cat,fa1,fa3,fa6,fa7,fa8,fa9,fa10,fa2,fa11,fa4,fa5)
fa_reagrupado_NoNA_num <- dplyr::select(Datos.num,fa1,fa3,fa6,fa7,fa8,fa9,fa10,fa2,fa4,fa5)
fa_reagrupado_NoNA_cat <- dplyr::select(Datos.cat,fa1,fa3,fa6,fa7,fa8,fa9,fa10,fa2,fa4,fa5)
Datos.num.comple <- na.omit(Datos.num)
Datos.num.incomp <- Datos.num[rowSums(is.na(Datos.num)) > 0, ]
Datos.num.imcomp <- subset(Datos.num.imcomp,
select = -which(colSums(is.na(Datos.num.imcomp)) > 0))
Datos.num.incomp <- Datos.num[rowSums(is.na(Datos.num)) > 0, ]
Datos.num.imcomp <- subset(Datos.num.imcomp,
select = -which(colSums(is.na(Datos.num.imcomp)) > 0))
Datos.num.imcomp <- subset(Datos.num.imcomp,
select = -which(colSums(is.na(Datos.num.incomp)) > 0))
colSums(is.na(Datos.num.incomp)
colSums(is.na(Datos.num.incomp)
Datos.num.incomp <- Datos.num[rowSums(is.na(Datos.num)) > 0, ]
Datos.num.imcomp <- Datos.num.imcomp %>%
select(names(.)[!colSums(is.na(.)) > 0])
View(Datos.num.incomp)
View(Datos.num.incomp)
Datos.num.imcomp %>%
select(names(.)[!colSums(is.na(.)) > 0])
Datos.num.imcomp <- Datos.num.imcomp[,-c('c24', 'c25', 'd46', 'd47', 'fa11', 'fa12')]
Datos.num.incomp$rph_id
Datos.num.incomp <- Datos.num[rowSums(is.na(Datos.num)) > 0, ]
Datos.num.imcomp <- Datos.num.imcomp[,-c('c24', 'c25', 'd46', 'd47', 'fa11', 'fa12')]
class(Datos.num.incomp)
Incom_NoNA <- Datos.num.incomp[, complete.cases(Datos.num.incomp)]
Incom_NoNA <- subset(Datos.num.incomp, select = -which(colSums(is.na(Datos.num.incomp)) > 0))
install.packages("foreign")
install.packages("foreign")
install.packages("foreign")
install.packages("foreign")
library(foreign)
?write.foreign
write.foreign(Datos.num.comple, "Datos.num.comple.sav", "Datos.num.comple.sav", package = "SPSS")
fitIncom<-cfa(model= modeloIncom,
data = Incom_NoNA[,c(5:81)], orthogonal=T,ordered = F)
## ANALISIS FACTORIAL CONFIRMATORIO ----
modeloIncom<-"capacidad =~ c2 + c3 + c4 + c5 + c6 + c7 + c8 + c9 + c10 + c11 + c12 + c13 + c14 + c15 + c16 + c17 + c18 + c19 + c20 + c21 + c22 + c23
desempeno =~ d1 + d2 + d3 + d4 + d5 + d6 + d7 + d8 + d9 + d10 + d11 + d12 +
d13 + d14 + d15 + d16 + d17 + d18 + d19 + d20 + d21 + d22 + d23 + d24 +
d25 + d26 + d27 + d28 + d29 + d30 + d31 + d32 + d33 + d34 + d35 + d36 + d37
+ d38 + d39 + d40 + d41 + d42 + d43 + d44 + d45
factores_ambientales =~ fa1 + fa2 + fa3 + fa4 + fa5 + fa6 + fa7 + fa8 + fa9 + fa10
"
library(whomds)
library(EFAtools)
library(psych)
library(haven)
library(polycor)
library(ggcorrplot)
library(GPArotation)
library(psych)
library(lavaan)
library(polycor)
library(ggcorrplot)
library(FactoMineR)
library(factoextra)
library(ade4)
library(FactoMineR)
library(missMDA)
library(dplyr)
## ANALISIS FACTORIAL CONFIRMATORIO ----
modeloIncom<-"capacidad =~ c2 + c3 + c4 + c5 + c6 + c7 + c8 + c9 + c10 + c11 + c12 + c13 + c14 + c15 + c16 + c17 + c18 + c19 + c20 + c21 + c22 + c23
desempeno =~ d1 + d2 + d3 + d4 + d5 + d6 + d7 + d8 + d9 + d10 + d11 + d12 +
d13 + d14 + d15 + d16 + d17 + d18 + d19 + d20 + d21 + d22 + d23 + d24 +
d25 + d26 + d27 + d28 + d29 + d30 + d31 + d32 + d33 + d34 + d35 + d36 + d37
+ d38 + d39 + d40 + d41 + d42 + d43 + d44 + d45
factores_ambientales =~ fa1 + fa2 + fa3 + fa4 + fa5 + fa6 + fa7 + fa8 + fa9 + fa10
"
fitIncom<-cfa(model= modeloIncom,
data = Incom_NoNA[,c(5:81)], orthogonal=T,ordered = F)
semPlot::semPaths(fitIncom, "std",layout = "circle")
View(fitIncom)
summary(fitIncom)
summary(fitIncom,fit.measures = TRUE, standardized = TRUE)
semPlot::semPaths(fitIncom, "std",layout = "circle3")
semPlot::semPaths(fitIncom, "std",layout = "circle3",color = "black")
semPlot::semPaths(fitIncom, "std",layout = "circle3",edge.color = "black")
# Show coefs
semPlot::semPaths(fitIncom, what = "std", style = "lisrel", layout = "circle")
# Instala e importa las bibliotecas necesarias
install.packages("igraph")
install.packages("igraph")
install.packages("qgraph")
library(igraph)
library(qgraph)
lavInspect(fitIncom, "std")
library(whomds)
library(EFAtools)
library(psych)
library(haven)
library(polycor)
library(ggcorrplot)
library(GPArotation)
library(psych)
library(lavaan)
library(polycor)
library(ggcorrplot)
library(FactoMineR)
library(factoextra)
library(ade4)
library(FactoMineR)
library(missMDA)
library(dplyr)
(lavaan)
library(lavaan)
lavInspect(fitIncom, "std")
lavInspect(fitIncom, "std")$lambda
# Crea un gráfico de red
red_grafo <- graph.adjacency(lavInspect(fitIncom, "std")$lambda, weighted = TRUE, mode = "undirected", diag = FALSE,
vertices = nombres_variables)
# Define los nombres de las variables
nombres_variables <- c("cap", "des", "facamb")
# Crea un gráfico de red
red_grafo <- graph.adjacency(lavInspect(fitIncom, "std")$lambda, weighted = TRUE, mode = "undirected", diag = FALSE,
vertices = nombres_variables)
# Define los nombres de las variables
rm(nombres_variables)
# Crea un gráfico de red
red_grafo <- graph.adjacency(lavInspect(fitIncom, "std")$lambda, weighted = TRUE, mode = "undirected", diag = FALSE)
